{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/plotly/src/lib/plotly.service.ts","../../../projects/plotly/src/lib/plotly.component.ts","../../../projects/plotly/src/lib/plotly-shared.module.ts","../../../projects/plotly/src/lib/plotly.module.ts","../../../projects/plotly/src/lib/plotly-via-cdn.module.ts","../../../projects/plotly/src/lib/plotly-via-window.module.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","Object","create","__values","o","s","m","i","PlotlyService","setModuleName","moduleName","getModuleName","setPlotly","plotly","react","Error","insert","instance","instances","indexOf","remove","div","index","splice","purge","prototype","getInstanceByDivId","id","_b","_c","getPlotly","waitFor","_this","_getPlotly","_a","msg","fn","localFn","setTimeout","newPlot","data","layout","config","frames","obj","plot","update","resize","Plots","undefined","Injectable","args","providedIn","PlotlyComponent","iterableDiffers","keyValueDiffers","defaultClassName","revision","debug","useResizeHandler","updateOnLayoutChange","updateOnDataChange","updateOnlyWithRevision","initialized","EventEmitter","error","afterExport","afterPlot","animated","animatingFrame","animationInterrupted","autoSize","beforeExport","buttonClicked","click","plotlyClick","clickAnnotation","deselect","doubleClick","framework","hover","legendClick","legendDoubleClick","relayout","restyle","redraw","selected","selecting","sliderChange","sliderEnd","sliderStart","transitioning","transitionInterrupted","unhover","relayouting","treemapclick","sunburstclick","eventNames","ngOnInit","createPlot","figure","createFigure","emit","observers","console","ngOnDestroy","resizeHandler","getWindow","removeEventListener","plotlyInstance","ngOnChanges","changes","shouldUpdate","isFirstChange","updatePlot","updateWindowResizeHandler","ngDoCheck","layoutDiffer","diff","find","dataDiffer","Array","isArray","dataDifferTrackBy","window","getClassName","classes","className","concat","join","plotEl","nativeElement","gd","forEach","name","eventName","toLowerCase","on","err","p","_transitionData","_frames","assign","addEventListener","item","uid","JSON","stringify","Component","selector","template","providers","IterableDiffers","KeyValueDiffers","ViewChild","static","Input","Output","NgModule","declarations","imports","CommonModule","exports","PlotlyModule","isValid","plotlyjs","PlotlySharedModule","PlotlyViaCDNModule","plotlyService","setPlotlyVersion","version","test","loadViaCDN","plotlyVersion","setPlotlyBundle","bundle","plotlyBundleNames","names","map","plotlyBundle","src","script","document","createElement","type","onerror","getElementsByTagName","appendChild","counter","Plotly"],"mappings":";;;;;;;;;;;;;;6FAmEgBA,EAAUC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,oBAItDO,EAAYjB,EAASkB,GACjC,IAAsGC,EAAGC,EAAGC,EAAGC,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPJ,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOK,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEZ,KAAMkB,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAOC,OAAUX,EACvJ,SAASM,EAAKM,GAAK,OAAO,SAAUC,GAAK,OACzC,SAAcC,GACV,GAAIjB,EAAG,MAAM,IAAIkB,UAAU,mCAC3B,KAAOd,OACH,GAAIJ,EAAI,EAAGC,IAAMC,EAAY,EAARe,EAAG,GAAShB,EAAU,OAAIgB,EAAG,GAAKhB,EAAS,SAAOC,EAAID,EAAU,SAAMC,EAAEiB,KAAKlB,GAAI,GAAKA,EAAEV,SAAWW,EAAIA,EAAEiB,KAAKlB,EAAGgB,EAAG,KAAKtB,KAAM,OAAOO,EAE3J,OADID,EAAI,EAAGC,IAAGe,EAAK,CAAS,EAARA,EAAG,GAAQf,EAAEb,QACzB4B,EAAG,IACP,KAAK,EAAG,KAAK,EAAGf,EAAIe,EAAI,MACxB,KAAK,EAAc,OAAXb,EAAEC,QAAgB,CAAEhB,MAAO4B,EAAG,GAAItB,MAAM,GAChD,KAAK,EAAGS,EAAEC,QAASJ,EAAIgB,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKb,EAAEI,IAAIY,MAAOhB,EAAEG,KAAKa,MAAO,SACxC,QACI,KAAMlB,EAAIE,EAAEG,MAAML,EAAIA,EAAEmB,OAAS,GAAKnB,EAAEA,EAAEmB,OAAS,KAAkB,IAAVJ,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEb,EAAI,EAAG,SACjG,GAAc,IAAVa,EAAG,MAAcf,GAAMe,EAAG,GAAKf,EAAE,IAAMe,EAAG,GAAKf,EAAE,IAAM,CAAEE,EAAEC,MAAQY,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYb,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIA,EAAIe,EAAI,MAC7D,GAAIf,GAAKE,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIE,EAAEI,IAAIc,KAAKL,GAAK,MACvDf,EAAE,IAAIE,EAAEI,IAAIY,MAChBhB,EAAEG,KAAKa,MAAO,SAEtBH,EAAKlB,EAAKoB,KAAKtC,EAASuB,GAC1B,MAAOZ,GAAKyB,EAAK,CAAC,EAAGzB,GAAIS,EAAI,UAAeD,EAAIE,EAAI,EACtD,GAAY,EAARe,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAE5B,MAAO4B,EAAG,GAAKA,EAAG,QAAK,EAAQtB,MAAM,GArB9BL,CAAK,CAACyB,EAAGC,MAyBhCO,OAAOC,gBAYpBC,EAASC,GACrB,IAAIC,EAAsB,mBAAXf,QAAyBA,OAAOC,SAAUe,EAAID,GAAKD,EAAEC,GAAIE,EAAI,EAC5E,GAAID,EAAG,OAAOA,EAAET,KAAKO,GACrB,GAAIA,GAAyB,iBAAbA,EAAEL,OAAqB,MAAO,CAC1C9B,KAAM,WAEF,OADImC,GAAKG,GAAKH,EAAEL,SAAQK,OAAI,GACrB,CAAErC,MAAOqC,GAAKA,EAAEG,KAAMlC,MAAO+B,KAG5C,MAAM,IAAIR,UAAUS,EAAI,0BAA4B,mCAqE/BJ,OAAOC,wBC1LhC,SAAAM,YAKkBA,EAAAC,cAAP,SAAqBC,GACxBF,EAAcE,WAAaA,GAGjBF,EAAAG,cAAP,WACH,OAAOH,EAAcE,YAGXF,EAAAI,UAAP,SAAiBC,GACpB,GAAsB,iBAAXA,GAA+C,mBAAjBA,EAAOC,MAC5C,MAAM,IAAIC,MAAM,mEAGpBP,EAAcK,OAASA,GAGbL,EAAAQ,OAAP,SAAcC,GAKjB,OAHe,IADDT,EAAcU,UAAUC,QAAQF,IAE1CT,EAAcU,UAAUlB,KAAKiB,GAE1BA,GAGGT,EAAAY,OAAP,SAAcC,GACjB,IAAMC,EAAQd,EAAcU,UAAUC,QAAQE,GAC1CC,GAAS,IACTd,EAAcU,UAAUK,OAAOD,EAAO,GACtCd,EAAcK,OAAOW,MAAMH,KAI5Bb,EAAAiB,UAAAC,mBAAA,SAAmBC,eACtB,IAAuB,IAAAC,EAAAzB,EAAAK,EAAcU,WAASW,EAAAD,EAAA3D,QAAA4D,EAAAxD,KAAAwD,EAAAD,EAAA3D,OAAE,CAA3C,IAAMgD,EAAQY,EAAA9D,MACf,GAAIkD,GAAYA,EAASU,KAAOA,EAC5B,OAAOV,sGAMNT,EAAAiB,UAAAK,UAAA,gHACT,MAAA,CAAA,EAAMtC,KAAKuC,SAAQ,WAAM,MAAsB,YAAtBC,EAAKC,wBAC9B,OADAC,EAAAlD,OACA,CAAA,EAAOQ,KAAKyC,sBAGNzB,EAAAiB,UAAAQ,WAAA,WACN,QAAoC,IAAzBzB,EAAcK,OAAwB,CAC7C,IAAMsB,EAAmC,WAA7B3B,EAAcE,WACpB,uDACA,4CAEN,MAAM,IAAIK,MAAMoB,GAGpB,OAAO3B,EAAcK,QAGfL,EAAAiB,UAAAM,QAAA,SAAQK,GACd,OAAO,IAAIzE,SAAQ,SAACC,GAChB,IAAMyE,EAAU,WACZD,IAAOxE,IAAY0E,WAAWD,EAAS,KAG3CA,QAKK7B,EAAAiB,UAAAc,QAAA,SAAQlB,EAAqBmB,EAAqBC,EAAiCC,EAAiCC,0GAC7H,MAAA,CAAA,EAAMnD,KAAKuC,SAAQ,WAAM,MAAsB,YAAtBC,EAAKC,wBAE9B,OAFAC,EAAAlD,OAEI2D,GACMC,EAAM,CAACJ,KAAIA,EAAEC,OAAMA,EAAEC,OAAMA,EAAEC,OAAMA,GACzC,CAAA,EAAOnD,KAAKyC,aAAaM,QAAQlB,EAAKuB,GAAKtE,MAAK,WAAM,OAAAkC,EAAcQ,OAAOK,QAG/E,CAAA,EAAO7B,KAAKyC,aAAaM,QAAQlB,EAAKmB,EAAMC,EAAQC,GAAQpE,MAAK,WAAM,OAAAkC,EAAcQ,OAAOK,eAGzFb,EAAAiB,UAAAoB,KAAA,SAAKxB,EAA+BmB,EAAqBC,EAAiCC,EAAiCC,GAC9H,GAAIA,EAAQ,CACR,IAAMC,EAAM,CAACJ,KAAIA,EAAEC,OAAMA,EAAEC,OAAMA,EAAEC,OAAMA,GACzC,OAAOnD,KAAKyC,aAAaY,KAAKxB,EAAKuB,GAGvC,OAAOpD,KAAKyC,aAAaY,KAAKxB,EAAKmB,EAAMC,EAAQC,IAG9ClC,EAAAiB,UAAAqB,OAAA,SAAOzB,EAA+BmB,EAAqBC,EAAiCC,EAAiCC,GAChI,GAAIA,EAAQ,CACR,IAAMC,EAAM,CAACJ,KAAIA,EAAEC,OAAMA,EAAEC,OAAMA,EAAEC,OAAMA,GACzC,OAAOnD,KAAKyC,aAAanB,MAAMO,EAAKuB,GAGxC,OAAOpD,KAAKyC,aAAanB,MAAMO,EAAKmB,EAAMC,EAAQC,IAI/ClC,EAAAiB,UAAAsB,OAAA,SAAO1B,GACV,OAAO7B,KAAKyC,aAAae,MAAMD,OAAO1B,SAxGzBb,EAAAU,UAAwC,GACxCV,EAAAK,YAAeoC,EACfzC,EAAAE,gBAA0BuC,iHAN9CC,EAAAA,WAAUC,KAAA,CAAC,CACRC,WAAY,4BC+FZ,SAAAC,EACWxC,EACAyC,EACAC,GAFA/D,KAAAqB,OAAAA,EACArB,KAAA8D,gBAAAA,EACA9D,KAAA+D,gBAAAA,EAxED/D,KAAAgE,iBAAmB,iBAgBpBhE,KAAAiE,SAAW,EAEXjE,KAAAkE,OAAQ,EACRlE,KAAAmE,kBAAmB,EAEnBnE,KAAAoE,sBAAuB,EACvBpE,KAAAqE,oBAAqB,EACrBrE,KAAAsE,wBAAyB,EAExBtE,KAAAuE,YAAc,IAAIC,EAAAA,aAClBxE,KAAAsD,OAAS,IAAIkB,EAAAA,aACbxE,KAAAgC,MAAQ,IAAIwC,EAAAA,aACZxE,KAAAyE,MAAQ,IAAID,EAAAA,aAEZxE,KAAA0E,YAAc,IAAIF,EAAAA,aAClBxE,KAAA2E,UAAY,IAAIH,EAAAA,aAChBxE,KAAA4E,SAAW,IAAIJ,EAAAA,aACfxE,KAAA6E,eAAiB,IAAIL,EAAAA,aACrBxE,KAAA8E,qBAAuB,IAAIN,EAAAA,aAC3BxE,KAAA+E,SAAW,IAAIP,EAAAA,aACfxE,KAAAgF,aAAe,IAAIR,EAAAA,aACnBxE,KAAAiF,cAAgB,IAAIT,EAAAA,aACpBxE,KAAAkF,MAAQ,IAAIV,EAAAA,aACZxE,KAAAmF,YAAc,IAAIX,EAAAA,aAClBxE,KAAAoF,gBAAkB,IAAIZ,EAAAA,aACtBxE,KAAAqF,SAAW,IAAIb,EAAAA,aACfxE,KAAAsF,YAAc,IAAId,EAAAA,aAClBxE,KAAAuF,UAAY,IAAIf,EAAAA,aAChBxE,KAAAwF,MAAQ,IAAIhB,EAAAA,aACZxE,KAAAyF,YAAc,IAAIjB,EAAAA,aAClBxE,KAAA0F,kBAAoB,IAAIlB,EAAAA,aACxBxE,KAAAsB,MAAQ,IAAIkD,EAAAA,aACZxE,KAAA2F,SAAW,IAAInB,EAAAA,aACfxE,KAAA4F,QAAU,IAAIpB,EAAAA,aACdxE,KAAA6F,OAAS,IAAIrB,EAAAA,aACbxE,KAAA8F,SAAW,IAAItB,EAAAA,aACfxE,KAAA+F,UAAY,IAAIvB,EAAAA,aAChBxE,KAAAgG,aAAe,IAAIxB,EAAAA,aACnBxE,KAAAiG,UAAY,IAAIzB,EAAAA,aAChBxE,KAAAkG,YAAc,IAAI1B,EAAAA,aAClBxE,KAAAmG,cAAgB,IAAI3B,EAAAA,aACpBxE,KAAAoG,sBAAwB,IAAI5B,EAAAA,aAC5BxE,KAAAqG,QAAU,IAAI7B,EAAAA,aACdxE,KAAAsG,YAAc,IAAI9B,EAAAA,aAClBxE,KAAAuG,aAAe,IAAI/B,EAAAA,aACnBxE,KAAAwG,cAAgB,IAAIhC,EAAAA,aAEvBxE,KAAAyG,WAAa,CAAC,cAAe,YAAa,WAAY,iBAAkB,uBAAwB,WACnG,eAAgB,gBAAiB,kBAAmB,WAAY,cAAe,YAAa,QAC5F,cAAe,oBAAqB,QAAS,WAAY,UAAW,SAAU,WAAY,YAAa,eACvG,YAAa,cAAe,gBAAiB,wBAAyB,UAAW,cAAe,eAChG,wBAQJ5C,EAAA5B,UAAAyE,SAAA,WAAA,IAAAlE,EAAAxC,KAMI,GALAA,KAAK2G,aAAa7H,MAAK,WACnB,IAAM8H,EAASpE,EAAKqE,eACpBrE,EAAK+B,YAAYuC,KAAKF,MAGtB5G,KAAKkF,MAAM6B,UAAUxG,OAAS,EAAG,CAGjCyG,QAAQvC,MAFI,6JAMpBZ,EAAA5B,UAAAgF,YAAA,WACsC,mBAAvBjH,KAAKkH,gBACZlH,KAAKmH,YAAYC,oBAAoB,SAAUpH,KAAKkH,eACpDlH,KAAKkH,mBAAgBzD,GAGzB,IAAMmD,EAAS5G,KAAK6G,eACpB7G,KAAKgC,MAAM8E,KAAKF,GAChB5F,EAAcY,OAAO5B,KAAKqH,iBAG9BxD,EAAA5B,UAAAqF,YAAA,SAAYC,GACR,IAAIC,GAAe,EAEbvD,EAAyBsD,EAAQtD,SACnCA,IAAaA,EAASwD,kBACtBD,GAAe,GAGnB,IAAMtD,EAAsBqD,EAAQrD,MAChCA,IAAUA,EAAMuD,kBAChBD,GAAe,GAGfA,GACAxH,KAAK0H,aAGT1H,KAAK2H,6BAGT9D,EAAA5B,UAAA2F,UAAA,WACI,GAAI5H,KAAKsE,uBACL,OAAO,EAGX,IAAIkD,GAAe,EAEfxH,KAAKoE,uBACDpE,KAAK6H,aACiB7H,KAAK6H,aAAaC,KAAK9H,KAAKiD,UAE9CuE,GAAe,GAEZxH,KAAKiD,OACZjD,KAAK6H,aAAe7H,KAAK+D,gBAAgBgE,KAAK/H,KAAKiD,QAAQvC,SAE3DV,KAAK6H,kBAAepE,GAIxBzD,KAAKqE,qBACDrE,KAAKgI,WACehI,KAAKgI,WAAWF,KAAK9H,KAAKgD,QAE1CwE,GAAe,GAEZS,MAAMC,QAAQlI,KAAKgD,MAC1BhD,KAAKgI,WAAahI,KAAK8D,gBAAgBiE,KAAK/H,KAAKgD,MAAMtC,OAAOV,KAAKmI,mBAEnEnI,KAAKgI,gBAAavE,GAItB+D,GAAgBxH,KAAKqH,gBACrBrH,KAAK0H,cAIb7D,EAAA5B,UAAAkF,UAAA,WACI,OAAOiB,QAGXvE,EAAA5B,UAAAoG,aAAA,WACI,IAAIC,EAAU,CAACtI,KAAKgE,kBAQpB,OANIiE,MAAMC,QAAQlI,KAAKuI,WACnBD,EAAUA,EAAQE,OAAOxI,KAAKuI,WACvBvI,KAAKuI,WACZD,EAAQ9H,KAAKR,KAAKuI,WAGfD,EAAQG,KAAK,MAGxB5E,EAAA5B,UAAA0E,WAAA,WAAA,IAAAnE,EAAAxC,KACI,OAAOA,KAAKqB,OAAO0B,QAAQ/C,KAAK0I,OAAOC,cAAe3I,KAAKgD,KAAMhD,KAAKiD,OAAQjD,KAAKkD,OAAQlD,KAAKmD,QAAQrE,MAAK,SAAAuI,GACzG7E,EAAK6E,eAAiBA,EACtB7E,EAAK2E,YAAYyB,GAAKpG,EAAK0B,MAAQmD,OAAiB5D,EAEpDjB,EAAKiE,WAAWoC,SAAQ,SAAAC,GACpB,IAAMC,EAAY,UAAUD,EAAKE,cACjC3B,EAAe4B,GAAGF,GAAW,SAAC/F,GAAe,OAAAR,EAAKsG,GAA6BhC,KAAK9D,SAGxFqE,EAAe4B,GAAG,gBAAgB,SAACjG,GAC/BR,EAAK0C,MAAM4B,KAAK9D,GAChBR,EAAK2C,YAAY2B,KAAK9D,MAG1BR,EAAKmF,+BACN,SAAAuB,GACClC,QAAQvC,MAAM,wBAAyByE,GACvC1G,EAAKiC,MAAMqC,KAAKoC,OAIxBrF,EAAA5B,UAAA4E,aAAA,WACI,IAAMsC,EAASnJ,KAAKqH,eAOpB,MAN8B,CAC1BrE,KAAMmG,EAAEnG,KACRC,OAAQkG,EAAElG,OACVE,OAAQgG,EAAEC,gBAAkBD,EAAEC,gBAAgBC,QAAU,OAMhExF,EAAA5B,UAAAyF,WAAA,WAAA,IAAAlF,EAAAxC,KACI,IAAKA,KAAKqH,eAAgB,CACtB,IAAM5C,EAAQ,IAAIlD,MAAM,uCAExB,MADAvB,KAAKyE,MAAMqC,KAAKrC,GACVA,EAGV,IAAMxB,EAAMxC,OAAA6I,OAAA,GAAQtJ,KAAKiD,QAEzB,OAAOjD,KAAKqB,OAAOiC,OAAOtD,KAAKqH,eAAgBrH,KAAKgD,KAAMC,EAAQjD,KAAKkD,OAAQlD,KAAKmD,QAAQrE,MAAK,WAC7F,IAAM8H,EAASpE,EAAKqE,eACpBrE,EAAKc,OAAOwD,KAAKF,MAClB,SAAAsC,GACClC,QAAQvC,MAAM,6BAA8ByE,GAC5C1G,EAAKiC,MAAMqC,KAAKoC,OAIxBrF,EAAA5B,UAAA0F,0BAAA,WAAA,IAAAnF,EAAAxC,KACQA,KAAKmE,sBACsBV,IAAvBzD,KAAKkH,gBACLlH,KAAKkH,cAAgB,WAAM,OAAA1E,EAAKnB,OAAOkC,OAAOf,EAAK6E,iBACnDrH,KAAKmH,YAAYoC,iBAAiB,SAAUvJ,KAAKkH,gBAGnB,mBAAvBlH,KAAKkH,gBACZlH,KAAKmH,YAAYC,oBAAoB,SAAUpH,KAAKkH,eACpDlH,KAAKkH,mBAAgBzD,IAKjCI,EAAA5B,UAAAkG,kBAAA,SAAkB7I,EAAWkK,GACzB,IAAMpG,EAAM3C,OAAO6I,OAAO,GAAIE,EAAM,CAAEC,IAAK,KAC3C,OAAOC,KAAKC,UAAUvG,6BAxP7BwG,EAAAA,UAASjG,KAAA,CAAC,CACPkG,SAAU,cACVC,SAAU,0HAGVC,UAAW,CAAC/I,gDATPA,SALLgJ,EAAAA,uBAEAC,EAAAA,mDAsBCC,EAAAA,UAASvG,KAAA,CAAC,OAAQ,CAAEwG,QAAQ,kBAE5BC,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,qBACAA,EAAAA,qBAEAA,EAAAA,wBACAA,EAAAA,yBACAA,EAAAA,qBACAA,EAAAA,gCACAA,EAAAA,oCAEAA,EAAAA,kCACAA,EAAAA,sCACAA,EAAAA,2BAEAC,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,4BAEAA,EAAAA,0BACAA,EAAAA,yBACAA,EAAAA,+BACAA,EAAAA,qCACAA,EAAAA,yBACAA,EAAAA,6BACAA,EAAAA,8BACAA,EAAAA,sBACAA,EAAAA,4BACAA,EAAAA,gCACAA,EAAAA,yBACAA,EAAAA,4BACAA,EAAAA,0BACAA,EAAAA,sBACAA,EAAAA,4BACAA,EAAAA,kCACAA,EAAAA,sBACAA,EAAAA,yBACAA,EAAAA,wBACAA,EAAAA,uBACAA,EAAAA,yBACAA,EAAAA,0BACAA,EAAAA,6BACAA,EAAAA,0BACAA,EAAAA,4BACAA,EAAAA,8BACAA,EAAAA,sCACAA,EAAAA,wBACAA,EAAAA,4BACAA,EAAAA,6BACAA,EAAAA,8BACAA,EAAAA,gBChFD,iCAPHC,EAAAA,SAAQ3G,KAAA,CAAC,CACN4G,aAAc,CAAC1G,GACf2G,QAAS,CAACC,EAAAA,cACVV,UAAW,CAAC/I,GACZ0J,QAAS,CAAC7G,8DCMV,SAAA8G,IACI,IAAK3K,KAAK4K,UAAW,CAGjB,MAAM,IAAIrJ,MAFE,6IAKhBP,EAAcI,UAAUuJ,EAAaE,iBAGjCF,EAAA1I,UAAA2I,QAAA,WACJ,YAAiCnH,IAA1BkH,EAAaE,UACyB,mBAA/BF,EAAaE,SAASxH,WAd1BsH,EAAAE,SAAgB,uBAPjCP,EAAAA,SAAQ3G,KAAA,CAAC,CACN4G,aAAc,GACdC,QAAS,CAACC,EAAAA,aAAcK,GACxBf,UAAW,CAAC/I,GACZ0J,QAAS,CAACI,8DCSV,SAAAC,EAAmBC,GAAAhL,KAAAgL,cAAAA,EACfhK,EAAcC,cAAc,iBAGlB8J,EAAAE,iBAAP,SAAwBC,GAE3B,KADyB,WAAZA,GAAwB,yBAAyBC,KAAKD,IAE/D,MAAM,IAAI3J,MAAM,+EAGpBwJ,EAAmBK,aACnBL,EAAmBM,cAAgBH,GAGzBH,EAAAO,gBAAP,SAAuBC,GAE1B,KADwB,OAAXA,GAAmBR,EAAmBS,kBAAkB7J,QAAQ4J,IAAW,GAC7E,CACP,IAAME,EAAQV,EAAmBS,kBAAkBE,KAAI,SAAAzL,GAAK,MAAA,IAAIA,EAAC,OAAKwI,KAAK,MAC3E,MAAM,IAAIlH,MAAM,yDAAyDkK,EAAK,0BAGlFV,EAAmBY,aAAeJ,GAGxBR,EAAAK,WAAP,WACHpK,EAAcI,UAAU,WAgCxB0B,YA9Ba,WACT,IAAM8I,EAAyC,MAAnCb,EAAmBY,aACzB,8BAA8BZ,EAAmBM,cAAa,UAC9D,8BAA8BN,EAAmBY,aAAY,IAAIZ,EAAmBM,cAAa,UAEjGQ,EAA4BC,SAASC,cAAc,UACzDF,EAAOG,KAAO,kBACdH,EAAOD,IAAMA,EACbC,EAAOI,QAAU,WAAM,OAAAjF,QAAQvC,MAAM,wCAAwCmH,IAE/CE,SAASI,qBAAqB,QAAQ,GAC/DC,YAAYN,GAEjB,IAAIO,EAAU,IAERxJ,EAAK,WACP,IAAMvB,EAAU+G,OAAeiE,OAC/B,GAAIhL,EACAL,EAAcI,UAAUC,OACrB,CAAA,KAAI+K,EAAU,GAIjB,MAAM,IAAI7K,MAAM,wCAAwCqK,EAAG,cAH3DQ,IACAtJ,WAAWF,EAAI,MAMvBA,aA1DOmI,EAAAY,aAAwB,KACxBZ,EAAAM,cAAgB,SACjBN,EAAAS,kBAAwC,CAAC,QAAS,YAAa,MAAO,OAAQ,OAAQ,SAAU,+BATjHlB,EAAAA,SAAQ3G,KAAA,CAAC,CACN4G,aAAc,GACdC,QAAS,CAACC,EAAAA,aAAcK,GACxBf,UAAW,CAAC/I,GACZ0J,QAAS,CAACI,gDAXL9J,WCWL,WACI,IAAMK,EAAU+G,OAAeiE,OAE/B,QAAsB,IAAXhL,EACP,MAAM,IAAIE,MAAM,sCAGpBP,EAAcI,UAAUC,wBAd/BiJ,EAAAA,SAAQ3G,KAAA,CAAC,CACN4G,aAAc,GACdC,QAAS,CAACC,EAAAA,aAAcK,GACxBf,UAAW,CAAC/I,GACZ0J,QAAS,CAACI","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Plotly } from './plotly.interface';\n\ntype PlotlyName = 'Plotly' | 'ViaCDN' | 'ViaWindow';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlotlyService {\n    protected static instances: Plotly.PlotlyHTMLElement[] = [];\n    protected static plotly?: any = undefined;\n    protected static moduleName?: PlotlyName = undefined;\n\n    public static setModuleName(moduleName: PlotlyName): void {\n        PlotlyService.moduleName = moduleName;\n    }\n\n    public static getModuleName(): PlotlyName {\n        return PlotlyService.moduleName;\n    }\n\n    public static setPlotly(plotly: any): void {\n        if (typeof plotly === 'object' && typeof plotly.react !== 'function') {\n            throw new Error('Invalid plotly.js version. Please, use any version above 1.40.0');\n        }\n\n        PlotlyService.plotly = plotly;\n    }\n\n    public static insert(instance: Plotly.PlotlyHTMLElement): Plotly.PlotlyHTMLElement {\n        const index = PlotlyService.instances.indexOf(instance);\n        if (index === -1) {\n            PlotlyService.instances.push(instance);\n        }\n        return instance;\n    }\n\n    public static remove(div: Plotly.PlotlyHTMLElement): void {\n        const index = PlotlyService.instances.indexOf(div);\n        if (index >= 0) {\n            PlotlyService.instances.splice(index, 1);\n            PlotlyService.plotly.purge(div);\n        }\n    }\n\n    public getInstanceByDivId(id: string): Plotly.PlotlyHTMLElement | undefined {\n        for (const instance of PlotlyService.instances) {\n            if (instance && instance.id === id) {\n                return instance;\n            }\n        }\n        return undefined;\n    }\n\n    public async getPlotly(): Promise<any> {\n        await this.waitFor(() => this._getPlotly() !== 'waiting');\n        return this._getPlotly();\n    }\n\n    protected _getPlotly(): any {\n        if (typeof PlotlyService.plotly === 'undefined') {\n            const msg = PlotlyService.moduleName === 'ViaCDN'\n                ? `Error loading Peer dependency plotly.js from CDN url`\n                : `Peer dependency plotly.js isn't installed`;\n\n            throw new Error(msg);\n        }\n\n        return PlotlyService.plotly;\n    }\n\n    protected waitFor(fn: () => boolean): Promise<void> {\n        return new Promise((resolve) => {\n            const localFn = () => {\n                fn() ? resolve() : setTimeout(localFn, 10);\n            };\n\n            localFn();\n        });\n    }\n\n    // tslint:disable max-line-length\n    public async newPlot(div: HTMLDivElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any> {\n        await this.waitFor(() => this._getPlotly() !== 'waiting');\n\n        if (frames) {\n            const obj = {data, layout, config, frames};\n            return this._getPlotly().newPlot(div, obj).then(() => PlotlyService.insert(div as any)) as Promise<any>;\n        }\n\n        return this._getPlotly().newPlot(div, data, layout, config).then(() => PlotlyService.insert(div as any)) as Promise<any>;\n    }\n\n    public plot(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any>  {\n        if (frames) {\n            const obj = {data, layout, config, frames};\n            return this._getPlotly().plot(div, obj) as Promise<any>;\n        }\n\n        return this._getPlotly().plot(div, data, layout, config) as Promise<any>;\n    }\n\n    public update(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any>  {\n        if (frames) {\n            const obj = {data, layout, config, frames};\n            return this._getPlotly().react(div, obj) as Promise<any>;\n        }\n\n        return this._getPlotly().react(div, data, layout, config) as Promise<any>;\n    }\n    // tslint:enable max-line-length\n\n    public resize(div: Plotly.PlotlyHTMLElement): void {\n        return this._getPlotly().Plots.resize(div);\n    }\n}\n","/* tslint:disable component-selector no-output-native no-conflicting-lifecycle */\n\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChange,\n    SimpleChanges,\n    ViewChild,\n    DoCheck,\n    IterableDiffer,\n    IterableDiffers,\n    KeyValueDiffer,\n    KeyValueDiffers,\n} from '@angular/core';\n\nimport { PlotlyService } from './plotly.service';\nimport { Plotly } from './plotly.interface';\n\n// @dynamic\n@Component({\n    selector: 'plotly-plot',\n    template: `<div #plot [attr.id]=\"divId\" [ngClass]=\"getClassName()\" [ngStyle]=\"style\">\n      <ng-content></ng-content>\n    </div>`,\n    providers: [PlotlyService],\n})\nexport class PlotlyComponent implements OnInit, OnChanges, OnDestroy, DoCheck {\n    protected defaultClassName = 'js-plotly-plot';\n\n    public plotlyInstance: Plotly.PlotlyHTMLElement;\n    public resizeHandler?: (instance: Plotly.PlotlyHTMLElement) => void;\n    public layoutDiffer: KeyValueDiffer<string, any>;\n    public dataDiffer: IterableDiffer<Plotly.Data>;\n\n    @ViewChild('plot', { static: true }) plotEl: ElementRef;\n\n    @Input() data?: Plotly.Data[];\n    @Input() layout?: Partial<Plotly.Layout>;\n    @Input() config?: Partial<Plotly.Config>;\n    @Input() frames?: Partial<Plotly.Config>[];\n    @Input() style?: { [key: string]: string };\n\n    @Input() divId?: string;\n    @Input() revision = 0;\n    @Input() className?: string | string[];\n    @Input() debug = false;\n    @Input() useResizeHandler = false;\n\n    @Input() updateOnLayoutChange = true;\n    @Input() updateOnDataChange = true;\n    @Input() updateOnlyWithRevision = false;\n\n    @Output() initialized = new EventEmitter<Plotly.Figure>();\n    @Output() update = new EventEmitter<Plotly.Figure>();\n    @Output() purge = new EventEmitter<Plotly.Figure>();\n    @Output() error = new EventEmitter<Error>();\n\n    @Output() afterExport = new EventEmitter();\n    @Output() afterPlot = new EventEmitter();\n    @Output() animated = new EventEmitter();\n    @Output() animatingFrame = new EventEmitter();\n    @Output() animationInterrupted = new EventEmitter();\n    @Output() autoSize = new EventEmitter();\n    @Output() beforeExport = new EventEmitter();\n    @Output() buttonClicked = new EventEmitter();\n    @Output() click = new EventEmitter();\n    @Output() plotlyClick = new EventEmitter();\n    @Output() clickAnnotation = new EventEmitter();\n    @Output() deselect = new EventEmitter();\n    @Output() doubleClick = new EventEmitter();\n    @Output() framework = new EventEmitter();\n    @Output() hover = new EventEmitter();\n    @Output() legendClick = new EventEmitter();\n    @Output() legendDoubleClick = new EventEmitter();\n    @Output() react = new EventEmitter();\n    @Output() relayout = new EventEmitter();\n    @Output() restyle = new EventEmitter();\n    @Output() redraw = new EventEmitter();\n    @Output() selected = new EventEmitter();\n    @Output() selecting = new EventEmitter();\n    @Output() sliderChange = new EventEmitter();\n    @Output() sliderEnd = new EventEmitter();\n    @Output() sliderStart = new EventEmitter();\n    @Output() transitioning = new EventEmitter();\n    @Output() transitionInterrupted = new EventEmitter();\n    @Output() unhover = new EventEmitter();\n    @Output() relayouting = new EventEmitter();\n    @Output() treemapclick = new EventEmitter();\n    @Output() sunburstclick = new EventEmitter();\n\n    public eventNames = ['afterExport', 'afterPlot', 'animated', 'animatingFrame', 'animationInterrupted', 'autoSize',\n        'beforeExport', 'buttonClicked', 'clickAnnotation', 'deselect', 'doubleClick', 'framework', 'hover',\n        'legendClick', 'legendDoubleClick', 'react', 'relayout', 'restyle', 'redraw', 'selected', 'selecting', 'sliderChange',\n        'sliderEnd', 'sliderStart', 'transitioning', 'transitionInterrupted', 'unhover', 'relayouting', 'treemapclick',\n        'sunburstclick'];\n\n    constructor(\n        public plotly: PlotlyService,\n        public iterableDiffers: IterableDiffers,\n        public keyValueDiffers: KeyValueDiffers,\n    ) { }\n\n    ngOnInit(): void {\n        this.createPlot().then(() => {\n            const figure = this.createFigure();\n            this.initialized.emit(figure);\n        });\n\n        if (this.click.observers.length > 0) {\n            const msg = 'DEPRECATED: Reconsider using `(plotlyClick)` instead of `(click)` to avoid event conflict. '\n                + 'Please check https://github.com/plotly/angular-plotly.js#FAQ';\n            console.error(msg);\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (typeof this.resizeHandler === 'function') {\n            this.getWindow().removeEventListener('resize', this.resizeHandler as any);\n            this.resizeHandler = undefined;\n        }\n\n        const figure = this.createFigure();\n        this.purge.emit(figure);\n        PlotlyService.remove(this.plotlyInstance);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        let shouldUpdate = false;\n\n        const revision: SimpleChange = changes.revision;\n        if (revision && !revision.isFirstChange()) {\n            shouldUpdate = true;\n        }\n\n        const debug: SimpleChange = changes.debug;\n        if (debug && !debug.isFirstChange()) {\n            shouldUpdate = true;\n        }\n\n        if (shouldUpdate) {\n            this.updatePlot();\n        }\n\n        this.updateWindowResizeHandler();\n    }\n\n    ngDoCheck(): boolean | void {\n        if (this.updateOnlyWithRevision) {\n            return false;\n        }\n\n        let shouldUpdate = false;\n\n        if (this.updateOnLayoutChange) {\n            if (this.layoutDiffer) {\n                const layoutHasDiff = this.layoutDiffer.diff(this.layout);\n                if (layoutHasDiff) {\n                    shouldUpdate = true;\n                }\n            } else if (this.layout) {\n                this.layoutDiffer = this.keyValueDiffers.find(this.layout).create();\n            } else {\n                this.layoutDiffer = undefined;\n            }\n        }\n\n        if (this.updateOnDataChange) {\n            if (this.dataDiffer) {\n                const dataHasDiff = this.dataDiffer.diff(this.data);\n                if (dataHasDiff) {\n                    shouldUpdate = true;\n                }\n            } else if (Array.isArray(this.data)) {\n                this.dataDiffer = this.iterableDiffers.find(this.data).create(this.dataDifferTrackBy);\n            } else {\n                this.dataDiffer = undefined;\n            }\n        }\n\n        if (shouldUpdate && this.plotlyInstance) {\n            this.updatePlot();\n        }\n    }\n\n    getWindow(): any {\n        return window;\n    }\n\n    getClassName(): string {\n        let classes = [this.defaultClassName];\n\n        if (Array.isArray(this.className)) {\n            classes = classes.concat(this.className);\n        } else if (this.className) {\n            classes.push(this.className);\n        }\n\n        return classes.join(' ');\n    }\n\n    createPlot(): Promise<void> {\n        return this.plotly.newPlot(this.plotEl.nativeElement, this.data, this.layout, this.config, this.frames).then(plotlyInstance => {\n            this.plotlyInstance = plotlyInstance;\n            this.getWindow().gd = this.debug ? plotlyInstance : undefined;\n\n            this.eventNames.forEach(name => {\n                const eventName = `plotly_${name.toLowerCase()}`;\n                plotlyInstance.on(eventName, (data: any) => (this[name] as EventEmitter<void>).emit(data));\n            });\n\n            plotlyInstance.on('plotly_click', (data: any) => {\n                this.click.emit(data);\n                this.plotlyClick.emit(data);\n            });\n\n            this.updateWindowResizeHandler();\n        }, err => {\n            console.error('Error while plotting:', err);\n            this.error.emit(err);\n        });\n    }\n\n    createFigure(): Plotly.Figure {\n        const p: any = this.plotlyInstance;\n        const figure: Plotly.Figure = {\n            data: p.data,\n            layout: p.layout,\n            frames: p._transitionData ? p._transitionData._frames : null\n        };\n\n        return figure;\n    }\n\n    updatePlot(): Promise<any> {\n        if (!this.plotlyInstance) {\n            const error = new Error(`Plotly component wasn't initialized`);\n            this.error.emit(error);\n            throw error;\n        }\n\n        const layout = { ...this.layout };\n\n        return this.plotly.update(this.plotlyInstance, this.data, layout, this.config, this.frames).then(() => {\n            const figure = this.createFigure();\n            this.update.emit(figure);\n        }, err => {\n            console.error('Error while updating plot:', err);\n            this.error.emit(err);\n        });\n    }\n\n    updateWindowResizeHandler(): void {\n        if (this.useResizeHandler) {\n            if (this.resizeHandler === undefined) {\n                this.resizeHandler = () => this.plotly.resize(this.plotlyInstance);\n                this.getWindow().addEventListener('resize', this.resizeHandler as any);\n            }\n        } else {\n            if (typeof this.resizeHandler === 'function') {\n                this.getWindow().removeEventListener('resize', this.resizeHandler as any);\n                this.resizeHandler = undefined;\n            }\n        }\n    }\n\n    dataDifferTrackBy(_: number, item: any): unknown {\n        const obj = Object.assign({}, item, { uid: '' });\n        return JSON.stringify(obj);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotlyService } from './plotly.service';\nimport { PlotlyComponent } from './plotly.component';\n\n\n@NgModule({\n    declarations: [PlotlyComponent],\n    imports: [CommonModule],\n    providers: [PlotlyService],\n    exports: [PlotlyComponent],\n})\nexport class PlotlySharedModule {\n    constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotlyService } from './plotly.service';\nimport { PlotlySharedModule } from './plotly-shared.module';\n\n\n\n@NgModule({\n    declarations: [],\n    imports: [CommonModule, PlotlySharedModule],\n    providers: [PlotlyService],\n    exports: [PlotlySharedModule],\n})\nexport class PlotlyModule {\n    public static plotlyjs: any = {};\n\n    constructor() {\n        if (!this.isValid()) {\n            const msg = 'Invalid PlotlyJS object. Please check https://github.com/plotly/angular-plotly.js#quick-start'\n                + ' to see how to add PlotlyJS to your project.';\n            throw new Error(msg);\n        }\n\n        PlotlyService.setPlotly(PlotlyModule.plotlyjs);\n    }\n\n    private isValid(): boolean {\n        return PlotlyModule.plotlyjs !== undefined\n            && typeof PlotlyModule.plotlyjs.plot === 'function';\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotlyService } from './plotly.service';\nimport { PlotlySharedModule } from './plotly-shared.module';\n\n\nexport type PlotlyBundleName = 'basic' | 'cartesian' | 'geo' | 'gl3d' | 'gl2d' | 'mapbox' | 'finance';\n\n\n@NgModule({\n    declarations: [],\n    imports: [CommonModule, PlotlySharedModule],\n    providers: [PlotlyService],\n    exports: [PlotlySharedModule],\n})\nexport class PlotlyViaCDNModule {\n    private static plotlyBundle?: string = null;\n    private static plotlyVersion = 'latest';\n    public static plotlyBundleNames: PlotlyBundleName[] = ['basic', 'cartesian', 'geo', 'gl3d', 'gl2d', 'mapbox', 'finance'];\n\n    constructor(public plotlyService: PlotlyService) {\n        PlotlyService.setModuleName('ViaCDN');\n    }\n\n    public static setPlotlyVersion(version: string): void {\n        const isOk = version === 'latest' || /^\\d\\.\\d{1,2}\\.\\d{1,2}$/.test(version);\n        if (!isOk) {\n            throw new Error(`Invalid plotly version. Please set 'latest' or version number (i.e.: 1.4.3)`);\n        }\n\n        PlotlyViaCDNModule.loadViaCDN();\n        PlotlyViaCDNModule.plotlyVersion = version;\n    }\n\n    public static setPlotlyBundle(bundle: PlotlyBundleName): void {\n        const isOk = bundle === null || PlotlyViaCDNModule.plotlyBundleNames.indexOf(bundle) >= 0;\n        if (!isOk) {\n            const names = PlotlyViaCDNModule.plotlyBundleNames.map(n => `\"${n}\"`).join(', ');\n            throw new Error(`Invalid plotly bundle. Please set to null for full or ${names} for a partial bundle.`);\n        }\n\n        PlotlyViaCDNModule.plotlyBundle = bundle;\n    }\n\n    public static loadViaCDN(): void {\n        PlotlyService.setPlotly('waiting');\n\n        const init = () => {\n            const src = PlotlyViaCDNModule.plotlyBundle == null\n                ? `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyVersion}.min.js`\n                : `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyBundle}-${PlotlyViaCDNModule.plotlyVersion}.min.js`;\n\n            const script: HTMLScriptElement = document.createElement('script');\n            script.type = 'text/javascript';\n            script.src = src;\n            script.onerror = () => console.error(`Error loading plotly.js library from ${src}`);\n\n            const head: HTMLHeadElement = document.getElementsByTagName('head')[0];\n            head.appendChild(script);\n\n            let counter = 200; // equivalent of 10 seconds...\n\n            const fn = () => {\n                const plotly = (window as any).Plotly;\n                if (plotly) {\n                    PlotlyService.setPlotly(plotly);\n                } else if (counter > 0) {\n                    counter --;\n                    setTimeout(fn, 50);\n                } else {\n                    throw new Error(`Error loading plotly.js library from ${src}. Timeout.`);\n                }\n            };\n\n            fn();\n        };\n\n        setTimeout(init);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotlyService } from './plotly.service';\nimport { PlotlySharedModule } from './plotly-shared.module';\n\n\n@NgModule({\n    declarations: [],\n    imports: [CommonModule, PlotlySharedModule],\n    providers: [PlotlyService],\n    exports: [PlotlySharedModule],\n})\nexport class PlotlyViaWindowModule {\n    constructor() {\n        const plotly = (window as any).Plotly;\n\n        if (typeof plotly === 'undefined') {\n            throw new Error(`Plotly object not found on window.`);\n        }\n\n        PlotlyService.setPlotly(plotly);\n    }\n}\n"]}