!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("angular-plotly.js",["exports","@angular/core","@angular/common"],e):e(((t="undefined"!=typeof globalThis?globalThis:t||self)["angular-plotly"]=t["angular-plotly"]||{},t["angular-plotly"].js={}),t.ng.core,t.ng.common)}(this,(function(t,e,n){"use strict";function r(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(n){if("default"!==n){var r=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(e,n,r.get?r:{enumerable:!0,get:function(){return t[n]}})}})),e.default=t,Object.freeze(e)}var i=r(e);
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */function o(t,e,n,r){return new(n||(n=Promise))((function(i,o){function l(t){try{s(r.next(t))}catch(t){o(t)}}function a(t){try{s(r.throw(t))}catch(t){o(t)}}function s(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(l,a)}s((r=r.apply(t,e||[])).next())}))}function l(t,e){var n,r,i,o,l={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;l;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return l.label++,{value:o[1],done:!1};case 5:l.label++,r=o[1],o=[0];continue;case 7:o=l.ops.pop(),l.trys.pop();continue;default:if(!(i=l.trys,(i=i.length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){l=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){l.label=o[1];break}if(6===o[0]&&l.label<i[1]){l.label=i[1],i=o;break}if(i&&l.label<i[2]){l.label=i[2],l.ops.push(o);break}i[2]&&l.ops.pop(),l.trys.pop();continue}o=e.call(t,l)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}Object.create;function a(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}Object.create;var s=function(){function t(){}return t.setModuleName=function(e){t.moduleName=e},t.getModuleName=function(){return t.moduleName},t.setPlotly=function(e){if("object"==typeof e&&"function"!=typeof e.react)throw new Error("Invalid plotly.js version. Please, use any version above 1.40.0");t.plotly=e},t.insert=function(e){return-1===t.instances.indexOf(e)&&t.instances.push(e),e},t.remove=function(e){var n=t.instances.indexOf(e);n>=0&&(t.instances.splice(n,1),t.plotly.purge(e))},t.prototype.getInstanceByDivId=function(e){var n,r;try{for(var i=a(t.instances),o=i.next();!o.done;o=i.next()){var l=o.value;if(l&&l.id===e)return l}}catch(t){n={error:t}}finally{try{o&&!o.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}},t.prototype.getPlotly=function(){return o(this,void 0,void 0,(function(){var t=this;return l(this,(function(e){switch(e.label){case 0:return[4,this.waitFor((function(){return"waiting"!==t._getPlotly()}))];case 1:return e.sent(),[2,this._getPlotly()]}}))}))},t.prototype._getPlotly=function(){if(void 0===t.plotly){var e="ViaCDN"===t.moduleName?"Error loading Peer dependency plotly.js from CDN url":"Peer dependency plotly.js isn't installed";throw new Error(e)}return t.plotly},t.prototype.waitFor=function(t){return new Promise((function(e){var n=function(){t()?e():setTimeout(n,10)};n()}))},t.prototype.newPlot=function(e,n,r,i,a){return o(this,void 0,void 0,(function(){var o,s=this;return l(this,(function(l){switch(l.label){case 0:return[4,this.waitFor((function(){return"waiting"!==s._getPlotly()}))];case 1:return l.sent(),a?(o={data:n,layout:r,config:i,frames:a},[2,this._getPlotly().newPlot(e,o).then((function(){return t.insert(e)}))]):[2,this._getPlotly().newPlot(e,n,r,i).then((function(){return t.insert(e)}))]}}))}))},t.prototype.plot=function(t,e,n,r,i){if(i){var o={data:e,layout:n,config:r,frames:i};return this._getPlotly().plot(t,o)}return this._getPlotly().plot(t,e,n,r)},t.prototype.update=function(t,e,n,r,i){if(i){var o={data:e,layout:n,config:r,frames:i};return this._getPlotly().react(t,o)}return this._getPlotly().react(t,e,n,r)},t.prototype.resize=function(t){return this._getPlotly().Plots.resize(t)},t}();s.instances=[],s.plotly=void 0,s.moduleName=void 0,s.ɵprov=i.ɵɵdefineInjectable({factory:function(){return new s},token:s,providedIn:"root"}),s.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}];var u=function(){function t(t,n,r){this.plotly=t,this.iterableDiffers=n,this.keyValueDiffers=r,this.defaultClassName="js-plotly-plot",this.revision=0,this.debug=!1,this.useResizeHandler=!1,this.updateOnLayoutChange=!0,this.updateOnDataChange=!0,this.updateOnlyWithRevision=!1,this.initialized=new e.EventEmitter,this.update=new e.EventEmitter,this.purge=new e.EventEmitter,this.error=new e.EventEmitter,this.afterExport=new e.EventEmitter,this.afterPlot=new e.EventEmitter,this.animated=new e.EventEmitter,this.animatingFrame=new e.EventEmitter,this.animationInterrupted=new e.EventEmitter,this.autoSize=new e.EventEmitter,this.beforeExport=new e.EventEmitter,this.buttonClicked=new e.EventEmitter,this.click=new e.EventEmitter,this.plotlyClick=new e.EventEmitter,this.clickAnnotation=new e.EventEmitter,this.deselect=new e.EventEmitter,this.doubleClick=new e.EventEmitter,this.framework=new e.EventEmitter,this.hover=new e.EventEmitter,this.legendClick=new e.EventEmitter,this.legendDoubleClick=new e.EventEmitter,this.react=new e.EventEmitter,this.relayout=new e.EventEmitter,this.restyle=new e.EventEmitter,this.redraw=new e.EventEmitter,this.selected=new e.EventEmitter,this.selecting=new e.EventEmitter,this.sliderChange=new e.EventEmitter,this.sliderEnd=new e.EventEmitter,this.sliderStart=new e.EventEmitter,this.transitioning=new e.EventEmitter,this.transitionInterrupted=new e.EventEmitter,this.unhover=new e.EventEmitter,this.relayouting=new e.EventEmitter,this.treemapclick=new e.EventEmitter,this.sunburstclick=new e.EventEmitter,this.eventNames=["afterExport","afterPlot","animated","animatingFrame","animationInterrupted","autoSize","beforeExport","buttonClicked","clickAnnotation","deselect","doubleClick","framework","hover","legendClick","legendDoubleClick","react","relayout","restyle","redraw","selected","selecting","sliderChange","sliderEnd","sliderStart","transitioning","transitionInterrupted","unhover","relayouting","treemapclick","sunburstclick"]}return t.prototype.ngOnInit=function(){var t=this;if(this.createPlot().then((function(){var e=t.createFigure();t.initialized.emit(e)})),this.click.observers.length>0){console.error("DEPRECATED: Reconsider using `(plotlyClick)` instead of `(click)` to avoid event conflict. Please check https://github.com/plotly/angular-plotly.js#FAQ")}},t.prototype.ngOnDestroy=function(){"function"==typeof this.resizeHandler&&(this.getWindow().removeEventListener("resize",this.resizeHandler),this.resizeHandler=void 0);var t=this.createFigure();this.purge.emit(t),s.remove(this.plotlyInstance)},t.prototype.ngOnChanges=function(t){var e=!1,n=t.revision;n&&!n.isFirstChange()&&(e=!0);var r=t.debug;r&&!r.isFirstChange()&&(e=!0),e&&this.updatePlot(),this.updateWindowResizeHandler()},t.prototype.ngDoCheck=function(){if(this.updateOnlyWithRevision)return!1;var t=!1;this.updateOnLayoutChange&&(this.layoutDiffer?this.layoutDiffer.diff(this.layout)&&(t=!0):this.layout?this.layoutDiffer=this.keyValueDiffers.find(this.layout).create():this.layoutDiffer=void 0);this.updateOnDataChange&&(this.dataDiffer?this.dataDiffer.diff(this.data)&&(t=!0):Array.isArray(this.data)?this.dataDiffer=this.iterableDiffers.find(this.data).create(this.dataDifferTrackBy):this.dataDiffer=void 0);t&&this.plotlyInstance&&this.updatePlot()},t.prototype.getWindow=function(){return window},t.prototype.getClassName=function(){var t=[this.defaultClassName];return Array.isArray(this.className)?t=t.concat(this.className):this.className&&t.push(this.className),t.join(" ")},t.prototype.createPlot=function(){var t=this;return this.plotly.newPlot(this.plotEl.nativeElement,this.data,this.layout,this.config,this.frames).then((function(e){t.plotlyInstance=e,t.getWindow().gd=t.debug?e:void 0,t.eventNames.forEach((function(n){var r="plotly_"+n.toLowerCase();e.on(r,(function(e){return t[n].emit(e)}))})),e.on("plotly_click",(function(e){t.click.emit(e),t.plotlyClick.emit(e)})),t.updateWindowResizeHandler()}),(function(e){console.error("Error while plotting:",e),t.error.emit(e)}))},t.prototype.createFigure=function(){var t=this.plotlyInstance;return{data:t.data,layout:t.layout,frames:t._transitionData?t._transitionData._frames:null}},t.prototype.updatePlot=function(){var t=this;if(!this.plotlyInstance){var e=new Error("Plotly component wasn't initialized");throw this.error.emit(e),e}var n=Object.assign({},this.layout);return this.plotly.update(this.plotlyInstance,this.data,n,this.config,this.frames).then((function(){var e=t.createFigure();t.update.emit(e)}),(function(e){console.error("Error while updating plot:",e),t.error.emit(e)}))},t.prototype.updateWindowResizeHandler=function(){var t=this;this.useResizeHandler?void 0===this.resizeHandler&&(this.resizeHandler=function(){return t.plotly.resize(t.plotlyInstance)},this.getWindow().addEventListener("resize",this.resizeHandler)):"function"==typeof this.resizeHandler&&(this.getWindow().removeEventListener("resize",this.resizeHandler),this.resizeHandler=void 0)},t.prototype.dataDifferTrackBy=function(t,e){var n=Object.assign({},e,{uid:""});return JSON.stringify(n)},t}();u.decorators=[{type:e.Component,args:[{selector:"plotly-plot",template:'<div #plot [attr.id]="divId" [ngClass]="getClassName()" [ngStyle]="style">\n      <ng-content></ng-content>\n    </div>',providers:[s]}]}],u.ctorParameters=function(){return[{type:s},{type:e.IterableDiffers},{type:e.KeyValueDiffers}]},u.propDecorators={plotEl:[{type:e.ViewChild,args:["plot",{static:!0}]}],data:[{type:e.Input}],layout:[{type:e.Input}],config:[{type:e.Input}],frames:[{type:e.Input}],style:[{type:e.Input}],divId:[{type:e.Input}],revision:[{type:e.Input}],className:[{type:e.Input}],debug:[{type:e.Input}],useResizeHandler:[{type:e.Input}],updateOnLayoutChange:[{type:e.Input}],updateOnDataChange:[{type:e.Input}],updateOnlyWithRevision:[{type:e.Input}],initialized:[{type:e.Output}],update:[{type:e.Output}],purge:[{type:e.Output}],error:[{type:e.Output}],afterExport:[{type:e.Output}],afterPlot:[{type:e.Output}],animated:[{type:e.Output}],animatingFrame:[{type:e.Output}],animationInterrupted:[{type:e.Output}],autoSize:[{type:e.Output}],beforeExport:[{type:e.Output}],buttonClicked:[{type:e.Output}],click:[{type:e.Output}],plotlyClick:[{type:e.Output}],clickAnnotation:[{type:e.Output}],deselect:[{type:e.Output}],doubleClick:[{type:e.Output}],framework:[{type:e.Output}],hover:[{type:e.Output}],legendClick:[{type:e.Output}],legendDoubleClick:[{type:e.Output}],react:[{type:e.Output}],relayout:[{type:e.Output}],restyle:[{type:e.Output}],redraw:[{type:e.Output}],selected:[{type:e.Output}],selecting:[{type:e.Output}],sliderChange:[{type:e.Output}],sliderEnd:[{type:e.Output}],sliderStart:[{type:e.Output}],transitioning:[{type:e.Output}],transitionInterrupted:[{type:e.Output}],unhover:[{type:e.Output}],relayouting:[{type:e.Output}],treemapclick:[{type:e.Output}],sunburstclick:[{type:e.Output}]};var p=function(){};p.decorators=[{type:e.NgModule,args:[{declarations:[u],imports:[n.CommonModule],providers:[s],exports:[u]}]}],p.ctorParameters=function(){return[]};var c=function(){function t(){if(!this.isValid()){throw new Error("Invalid PlotlyJS object. Please check https://github.com/plotly/angular-plotly.js#quick-start to see how to add PlotlyJS to your project.")}s.setPlotly(t.plotlyjs)}return t.prototype.isValid=function(){return void 0!==t.plotlyjs&&"function"==typeof t.plotlyjs.plot},t}();c.plotlyjs={},c.decorators=[{type:e.NgModule,args:[{declarations:[],imports:[n.CommonModule,p],providers:[s],exports:[p]}]}],c.ctorParameters=function(){return[]};var d=function(){function t(t){this.plotlyService=t,s.setModuleName("ViaCDN")}return t.setPlotlyVersion=function(e){if(!("latest"===e||/^\d\.\d{1,2}\.\d{1,2}$/.test(e)))throw new Error("Invalid plotly version. Please set 'latest' or version number (i.e.: 1.4.3)");t.loadViaCDN(),t.plotlyVersion=e},t.setPlotlyBundle=function(e){if(!(null===e||t.plotlyBundleNames.indexOf(e)>=0)){var n=t.plotlyBundleNames.map((function(t){return'"'+t+'"'})).join(", ");throw new Error("Invalid plotly bundle. Please set to null for full or "+n+" for a partial bundle.")}t.plotlyBundle=e},t.loadViaCDN=function(){s.setPlotly("waiting");setTimeout((function(){var e=null==t.plotlyBundle?"https://cdn.plot.ly/plotly-"+t.plotlyVersion+".min.js":"https://cdn.plot.ly/plotly-"+t.plotlyBundle+"-"+t.plotlyVersion+".min.js",n=document.createElement("script");n.type="text/javascript",n.src=e,n.onerror=function(){return console.error("Error loading plotly.js library from "+e)},document.getElementsByTagName("head")[0].appendChild(n);var r=200,i=function(){var t=window.Plotly;if(t)s.setPlotly(t);else{if(!(r>0))throw new Error("Error loading plotly.js library from "+e+". Timeout.");r--,setTimeout(i,50)}};i()}))},t}();d.plotlyBundle=null,d.plotlyVersion="latest",d.plotlyBundleNames=["basic","cartesian","geo","gl3d","gl2d","mapbox","finance"],d.decorators=[{type:e.NgModule,args:[{declarations:[],imports:[n.CommonModule,p],providers:[s],exports:[p]}]}],d.ctorParameters=function(){return[{type:s}]};var y=function(){var t=window.Plotly;if(void 0===t)throw new Error("Plotly object not found on window.");s.setPlotly(t)};y.decorators=[{type:e.NgModule,args:[{declarations:[],imports:[n.CommonModule,p],providers:[s],exports:[p]}]}],y.ctorParameters=function(){return[]},t.PlotlyComponent=u,t.PlotlyModule=c,t.PlotlyService=s,t.PlotlyViaCDNModule=d,t.PlotlyViaWindowModule=y,t.ɵa=p,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=angular-plotly.js.umd.min.js.map